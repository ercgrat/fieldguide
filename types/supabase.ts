/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/members': {
    get: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.members.created_at'];
          user_id?: parameters['rowFilter.members.user_id'];
          organization_id?: parameters['rowFilter.members.organization_id'];
          role?: parameters['rowFilter.members.role'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['members'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** members */
          members?: definitions['members'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.members.created_at'];
          user_id?: parameters['rowFilter.members.user_id'];
          organization_id?: parameters['rowFilter.members.organization_id'];
          role?: parameters['rowFilter.members.role'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.members.created_at'];
          user_id?: parameters['rowFilter.members.user_id'];
          organization_id?: parameters['rowFilter.members.organization_id'];
          role?: parameters['rowFilter.members.role'];
        };
        body: {
          /** members */
          members?: definitions['members'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/products': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.products.id'];
          created_at?: parameters['rowFilter.products.created_at'];
          name?: parameters['rowFilter.products.name'];
          organization_id?: parameters['rowFilter.products.organization_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['products'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** products */
          products?: definitions['products'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.products.id'];
          created_at?: parameters['rowFilter.products.created_at'];
          name?: parameters['rowFilter.products.name'];
          organization_id?: parameters['rowFilter.products.organization_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.products.id'];
          created_at?: parameters['rowFilter.products.created_at'];
          name?: parameters['rowFilter.products.name'];
          organization_id?: parameters['rowFilter.products.organization_id'];
        };
        body: {
          /** products */
          products?: definitions['products'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/users': {
    get: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.users.created_at'];
          user_id?: parameters['rowFilter.users.user_id'];
          first_name?: parameters['rowFilter.users.first_name'];
          last_name?: parameters['rowFilter.users.last_name'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['users'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions['users'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.users.created_at'];
          user_id?: parameters['rowFilter.users.user_id'];
          first_name?: parameters['rowFilter.users.first_name'];
          last_name?: parameters['rowFilter.users.last_name'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters['rowFilter.users.created_at'];
          user_id?: parameters['rowFilter.users.user_id'];
          first_name?: parameters['rowFilter.users.first_name'];
          last_name?: parameters['rowFilter.users.last_name'];
        };
        body: {
          /** users */
          users?: definitions['users'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/organizations': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.organizations.id'];
          created_at?: parameters['rowFilter.organizations.created_at'];
          name?: parameters['rowFilter.organizations.name'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['organizations'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** organizations */
          organizations?: definitions['organizations'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.organizations.id'];
          created_at?: parameters['rowFilter.organizations.created_at'];
          name?: parameters['rowFilter.organizations.name'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.organizations.id'];
          created_at?: parameters['rowFilter.organizations.created_at'];
          name?: parameters['rowFilter.organizations.name'];
        };
        body: {
          /** organizations */
          organizations?: definitions['organizations'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  members: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    user_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id: number;
    /**
     * Format: public."Role"
     * @default Member
     * @enum {string}
     */
    role: 'Owner' | 'Member';
  };
  products: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: text
     * @default
     */
    name: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id: number;
  };
  users: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    user_id: string;
    /**
     * Format: text
     * @default
     */
    first_name: string;
    /**
     * Format: text
     * @default
     */
    last_name: string;
  };
  organizations: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: text
     * @default
     */
    name: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object';
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none';
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description members */
  'body.members': definitions['members'];
  /** Format: timestamp with time zone */
  'rowFilter.members.created_at': string;
  /** Format: uuid */
  'rowFilter.members.user_id': string;
  /** Format: bigint */
  'rowFilter.members.organization_id': string;
  /** Format: public."Role" */
  'rowFilter.members.role': string;
  /** @description products */
  'body.products': definitions['products'];
  /** Format: bigint */
  'rowFilter.products.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.products.created_at': string;
  /** Format: text */
  'rowFilter.products.name': string;
  /** Format: bigint */
  'rowFilter.products.organization_id': string;
  /** @description users */
  'body.users': definitions['users'];
  /** Format: timestamp with time zone */
  'rowFilter.users.created_at': string;
  /** Format: uuid */
  'rowFilter.users.user_id': string;
  /** Format: text */
  'rowFilter.users.first_name': string;
  /** Format: text */
  'rowFilter.users.last_name': string;
  /** @description organizations */
  'body.organizations': definitions['organizations'];
  /** Format: bigint */
  'rowFilter.organizations.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.organizations.created_at': string;
  /** Format: text */
  'rowFilter.organizations.name': string;
}
